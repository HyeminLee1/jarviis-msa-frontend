{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emma0\\\\workspace\\\\jarviis-msa-frontend\\\\src\\\\features\\\\todo\\\\components\\\\Tasks.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LayOut } from \"features/common\";\nimport \"features/todo/style/Task.scss\";\nimport { getBindingIdentifiers } from \"@babel/types\";\nimport { taskRequest } from \"../reducer/taskSlice\";\nimport TaskAdd from \"./TaskAdd\";\nimport TaskList from \"./TaskList\";\nimport dayjs from \"dayjs\";\nimport { suggestionAcceptSuccess } from \"features/suggestion/reducer/suggestionSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppTasks() {\n  const [task, setTask] = useState([]);\n  const [counter, setCounter] = useState(0);\n\n  const dateFormat = date => dayjs(date).format(\"YYYY-MM-DD\");\n\n  const today = new Date();\n  const [date, setDate] = useState(dateFormat(today));\n  const taskData = useSelector(state => state.task.taskData); // useEffect(() => {\n  //    console.log('task useEffect 사용')\n  //   dispatch(taskRequest({date: date}));\n  // }, []);\n\n  const dispatch = useDispatch();\n\n  if (taskData != null && counter < 1) {\n    setCounter(counter + 1);\n    setTask(taskData['data']);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC624\\uB298 \\uD560\\uC77C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"label-wrapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"new-todo-input\",\n        className: \"input input__lg\",\n        name: \"text\",\n        autoComplete: \"off\",\n        placeholder: \"What needs to be done?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: \"20px\"\n        },\n        type: \"submit\",\n        className: \"btn btn__primary btn__lg\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: [task.length, \" tasks remaining\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"todo stack-small\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: task.map(single => {\n            return /*#__PURE__*/_jsxDEV(TaskList, {\n              data: single\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn\",\n            children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\",\n              children: \"Eat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn__danger\",\n            children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\",\n              children: \"Eat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis-msa-frontend/src/features/todo/components/Tasks.js"],"names":["React","useEffect","useState","useDispatch","useSelector","LayOut","getBindingIdentifiers","taskRequest","TaskAdd","TaskList","dayjs","suggestionAcceptSuccess","AppTasks","task","setTask","counter","setCounter","dateFormat","date","format","today","Date","setDate","taskData","state","dispatch","marginLeft","length","map","single"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LayOut } from \"features/common\";\nimport \"features/todo/style/Task.scss\"\nimport { getBindingIdentifiers } from \"@babel/types\";\nimport { taskRequest } from \"../reducer/taskSlice\";\nimport TaskAdd from \"./TaskAdd\";\nimport TaskList from \"./TaskList\";\nimport dayjs from \"dayjs\";\nimport { suggestionAcceptSuccess } from \"features/suggestion/reducer/suggestionSlice\";\n\nexport default function AppTasks() {\n  const [task, setTask] = useState([]);\n  const [counter, setCounter] = useState(0)\n \n  const dateFormat = (date) => dayjs(date).format(\"YYYY-MM-DD\");\n  const today = new Date()\n  const [date, setDate] = useState(dateFormat(today))\n\n  const taskData = useSelector(state => state.task.taskData);\n  // useEffect(() => {\n  //    console.log('task useEffect 사용')\n  //   dispatch(taskRequest({date: date}));\n  // }, []);\n \n  const dispatch = useDispatch();\n \n  if (taskData != null && counter < 1) {\n    setCounter(counter + 1)\n    setTask(taskData['data'])\n  }\n \n  return (\n\n    <div className=\"todoapp stack-large\">\n    <h1>오늘 할일</h1>\n\n    <form>\n      <h2 className=\"label-wrapper\">\n        {/* <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label> */}\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"What needs to be done?\"\n      />\n      <button style={{marginLeft:\"20px\"}} type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n    \n    <h2 id=\"list-heading\">\n      {task.length} tasks remaining\n    </h2>\n    <ul\n      role=\"list\"\n      className=\"todo-list stack-large stack-exception\"\n      aria-labelledby=\"list-heading\"\n    >\n      <li className=\"todo stack-small\">\n      <div>\n            {task.map((single) => {\n                return (\n                  <TaskList\n                    data={single}\n                  />\n                );\n              })}\n          </div>\n\n        <div className=\"btn-group\">\n          <button type=\"button\" className=\"btn\">\n            Edit <span className=\"visually-hidden\">Eat</span>\n          </button>\n          <button type=\"button\" className=\"btn btn__danger\">\n            Delete <span className=\"visually-hidden\">Eat</span>\n          </button>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n\n  );\n  }"]},"metadata":{},"sourceType":"module"}