{"ast":null,"code":"import { taskRequest, taskSuccess, taskFailure, CompleteSuccess, CompleteFailure, CompleteRequest } from \"features/todo/reducer/taskSlice\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { taskAPI } from \"features/todo\";\n\nfunction* taskList(action) {\n  try {\n    const result = yield call(taskAPI.taskAPI, action.payload);\n    yield put(taskSuccess(result));\n    console.log('task saga 실행');\n  } catch (error) {\n    yield put(taskFailure(error));\n  }\n\n  ;\n}\n\nfunction* taskComplete(action) {\n  try {\n    const result = yield call(taskAPI.completeAPI, action.payload);\n    console.log(`saga result check ~~ ${result}`);\n    yield put(CompleteSuccess(result));\n    console.log('task saga 실행');\n  } catch (error) {\n    yield put(CompleteFailure(error));\n  }\n\n  ;\n}\n\nexport function* wathchTaskList() {\n  yield takeLatest(taskRequest.type, taskList);\n}\nexport function* watchTaskComplete() {\n  yield takeLatest(CompleteRequest.type, taskComplete);\n}","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis-msa-frontend/src/features/todo/module/taskSaga.ts"],"names":["taskRequest","taskSuccess","taskFailure","CompleteSuccess","CompleteFailure","CompleteRequest","call","put","takeLatest","taskAPI","taskList","action","result","payload","console","log","error","taskComplete","completeAPI","wathchTaskList","type","watchTaskComplete"],"mappings":"AACA,SAAoBA,WAApB,EAAiCC,WAAjC,EAA8CC,WAA9C,EACoCC,eADpC,EACqDC,eADrD,EACsEC,eADtE,QAC6F,iCAD7F;AAEA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAGA,UAAUC,QAAV,CAAmBC,MAAnB,EAAoD;AAChD,MAAI;AACA,UAAMC,MAA2B,GAAG,MAAMN,IAAI,CAC1CG,OAAO,CAACA,OADkC,EAE1CE,MAAM,CAACE,OAFmC,CAA9C;AAIA,UAAMN,GAAG,CAACN,WAAW,CAACW,MAAD,CAAZ,CAAT;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,GAPD,CAQA,OAAOC,KAAP,EAAiB;AACb,UAAMT,GAAG,CAACL,WAAW,CAACc,KAAD,CAAZ,CAAT;AACH;;AAAA;AACJ;;AAED,UAAUC,YAAV,CAAuBN,MAAvB,EAA0D;AACtD,MAAI;AACA,UAAMC,MAAyB,GAAG,MAAMN,IAAI,CACxCG,OAAO,CAACS,WADgC,EAExCP,MAAM,CAACE,OAFiC,CAA5C;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBH,MAAO,EAA3C;AACA,UAAML,GAAG,CAACJ,eAAe,CAACS,MAAD,CAAhB,CAAT;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,GARD,CASA,OAAOC,KAAP,EAAiB;AACb,UAAMT,GAAG,CAACH,eAAe,CAACY,KAAD,CAAhB,CAAT;AACH;;AAAA;AACJ;;AAED,OAAO,UAAUG,cAAV,GAA0B;AAC7B,QAAMX,UAAU,CAACR,WAAW,CAACoB,IAAb,EAAmBV,QAAnB,CAAhB;AACH;AAED,OAAO,UAAUW,iBAAV,GAA6B;AAChC,QAAMb,UAAU,CAACH,eAAe,CAACe,IAAjB,EAAuBH,YAAvB,CAAhB;AACH","sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { ParamType, taskRequest, taskSuccess, taskFailure, taskListDataPayload, \n    idParamType, completionPayload, CompleteSuccess, CompleteFailure, CompleteRequest } from \"features/todo/reducer/taskSlice\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { taskAPI } from \"features/todo\";\n\n\nfunction* taskList(action: PayloadAction<ParamType>){\n    try {\n        const result: taskListDataPayload = yield call(\n            taskAPI.taskAPI,\n            action.payload\n        );\n        yield put(taskSuccess(result));\n        console.log('task saga 실행')\n    }\n    catch (error:any){\n        yield put(taskFailure(error))\n    };\n}\n\nfunction* taskComplete(action: PayloadAction<idParamType>){\n    try {\n        const result: completionPayload = yield call(\n            taskAPI.completeAPI,\n            action.payload\n        );\n        console.log(`saga result check ~~ ${result}`)\n        yield put(CompleteSuccess(result));\n        console.log('task saga 실행')\n    }\n    catch (error:any){\n        yield put(CompleteFailure(error))\n    };\n}\n\nexport function* wathchTaskList(){\n    yield takeLatest(taskRequest.type, taskList);\n}\n\nexport function* watchTaskComplete(){\n    yield takeLatest(CompleteRequest.type, taskComplete);\n}\n"]},"metadata":{},"sourceType":"module"}