{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emma0\\\\workspace\\\\jarviis-msa-frontend\\\\src\\\\features\\\\todo\\\\components\\\\TaskList.js\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskList = ({\n  data\n}) => {\n  const [check, setCheck] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c-cb\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"todo-0\",\n      type: \"checkbox\",\n      defaultChecked: false,\n      onChange: () => {\n        setCheck(!check);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"todo-label\",\n      htmlFor: \"todo-0\",\n      children: data.contents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), check ? /*#__PURE__*/_jsxDEV(\"img\", {\n      class: \"rotate-center\",\n      style: {\n        width: '6%',\n        visibility: \"visible\",\n        float: \"right\"\n      },\n      src: require(\"features/todo/images/feedback.png\").default\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: '6%',\n        visibility: \"hidden\",\n        float: \"right\"\n      },\n      src: require(\"features/todo/images/feedback.png\").default\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\nTaskList.propTypes = {\n  data: PropTypes.object\n};\nexport default TaskList;","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis-msa-frontend/src/features/todo/components/TaskList.js"],"names":["PropTypes","React","useState","useDispatch","TaskList","data","check","setCheck","contents","width","visibility","float","require","default","propTypes","object"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAE9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAlC;AAEC,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACA;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,IAAI,EAAC,UAAzB;AAAoC,MAAA,cAAc,EAAE,KAApD;AAA2D,MAAA,QAAQ,EAAE,MAAI;AACvEK,QAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,OAAO,EAAC,QAAtC;AAAA,gBACGD,IAAI,CAACG;AADR;AAAA;AAAA;AAAA;AAAA,YAJA,EAOEF,KAAK,gBAAG;AAAK,MAAA,KAAK,EAAC,eAAX;AACV,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,UAAU,EAAE,SAA3B;AAAsCC,QAAAA,KAAK,EAAE;AAA7C,OADG;AAEV,MAAA,GAAG,EAAEC,OAAO,CAAC,mCAAD,CAAP,CAA6CC;AAFxC;AAAA;AAAA;AAAA;AAAA,YAAH,gBAGN;AACD,MAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,UAAU,EAAE,QAA3B;AAAqCC,QAAAA,KAAK,EAAE;AAA5C,OADN;AAED,MAAA,GAAG,EAAEC,OAAO,CAAC,mCAAD,CAAP,CAA6CC;AAFjD;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CApBD;;AAsBAT,QAAQ,CAACU,SAAT,GAAqB;AACnBT,EAAAA,IAAI,EAAEL,SAAS,CAACe;AADG,CAArB;AAIA,eAAeX,QAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { useState }  from \"react\";\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst TaskList = ({ data }) => {\r\n    \r\n const [check, setCheck] = useState(false)\r\n\r\n  return (\r\n    <div className=\"c-cb\">\r\n    <input  id=\"todo-0\" type=\"checkbox\" defaultChecked={false} onChange={()=>{\r\n      setCheck(!check)\r\n    }}/>\r\n    <label className=\"todo-label\" htmlFor=\"todo-0\">\r\n      {data.contents}\r\n    </label>\r\n    { check ? <img class=\"rotate-center\"\r\n    style={{ width: '6%', visibility: \"visible\", float: \"right\" }}\r\n    src={require(\"features/todo/images/feedback.png\").default}/>\r\n    :<img \r\n    style={{ width: '6%', visibility: \"hidden\", float: \"right\" }}\r\n    src={require(\"features/todo/images/feedback.png\").default}/>}\r\n  </div>   \r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n\r\nexport default TaskList;\r\n"]},"metadata":{},"sourceType":"module"}