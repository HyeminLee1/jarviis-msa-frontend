{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { suggestionAPI } from \"features/suggestion\";\nimport { suggestionFailure, suggestionRequest, suggestionResultFailure, suggestionResultRequest, suggestionResultSuccess, suggestionSuccess } from \"../reducer/suggestionSlice\"; //리스트\n\nfunction* suggestionUser(action) {\n  alert(\"suggestion saga action 감지\");\n\n  try {\n    const result = yield call(suggestionAPI.suggestionAPI, action.payload);\n    yield put(suggestionSuccess(result));\n    alert(\"suggestion saga 실행\"); // window.localStorage.setItem('sessionSuggestion', JSON.stringify(result.data))\n  } catch (error) {\n    yield put(suggestionFailure(error));\n    alert(error);\n  }\n}\n\nfunction* accecpt(action) {\n  try {\n    const result = yield call(suggestionAPI.suggestionAcceptAPI, action.payload);\n    yield put(suggestionResultSuccess(result)); // window.location.href =''\n  } catch (error) {\n    yield put(suggestionResultFailure(error));\n    alert(error);\n  }\n}\n\nfunction* reject(action) {\n  try {\n    const result = yield call(suggestionAPI.suggestionRejectAPI, action.payload);\n    yield put(suggestionResultSuccess(result)); // window.location.href =''\n  } catch (error) {\n    yield put(suggestionResultFailure(error));\n    alert(error);\n  }\n}\n\nexport function* wacthSuggestion() {\n  alert('3. wacthSuggestion ');\n  yield takeLatest(suggestionRequest.type, suggestionUser);\n}\nexport function* wacthAccept() {\n  yield takeLatest(suggestionResultRequest.type, accecpt);\n}\nexport function* wacthReject() {\n  yield takeLatest(suggestionResultRequest.type, reject);\n}","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis-msa-frontend/src/features/suggestion/module/suggestionSaga.ts"],"names":["call","put","takeLatest","suggestionAPI","suggestionFailure","suggestionRequest","suggestionResultFailure","suggestionResultRequest","suggestionResultSuccess","suggestionSuccess","suggestionUser","action","alert","result","payload","error","accecpt","suggestionAcceptAPI","reject","suggestionRejectAPI","wacthSuggestion","type","wacthAccept","wacthReject"],"mappings":"AACA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,iBAAT,EAA0EC,iBAA1E,EACEC,uBADF,EACoDC,uBADpD,EAC6EC,uBAD7E,EACsGC,iBADtG,QAC+H,4BAD/H,C,CAIA;;AACA,UAAUC,cAAV,CAAyBC,MAAzB,EAAmE;AACjEC,EAAAA,KAAK,CAAC,2BAAD,CAAL;;AACA,MAAI;AACA,UAAMC,MAAiC,GAAG,MAAMb,IAAI,CAClDG,aAAa,CAACA,aADoC,EAElDQ,MAAM,CAACG,OAF2C,CAApD;AAIA,UAAMb,GAAG,CAACQ,iBAAiB,CAACI,MAAD,CAAlB,CAAT;AACAD,IAAAA,KAAK,CAAC,oBAAD,CAAL,CANA,CAOA;AAEH,GATD,CASE,OAAOG,KAAP,EAAmB;AACjB,UAAMd,GAAG,CAACG,iBAAiB,CAACW,KAAD,CAAlB,CAAT;AACAH,IAAAA,KAAK,CAACG,KAAD,CAAL;AACH;AACF;;AAED,UAAUC,OAAV,CAAkBL,MAAlB,EAAiE;AAC/D,MAAI;AACF,UAAME,MAA+B,GAAG,MAAMb,IAAI,CAChDG,aAAa,CAACc,mBADkC,EAEhDN,MAAM,CAACG,OAFyC,CAAlD;AAIA,UAAMb,GAAG,CAACO,uBAAuB,CAACK,MAAD,CAAxB,CAAT,CALE,CAMF;AACD,GAPD,CAOE,OAAOE,KAAP,EAAmB;AACnB,UAAMd,GAAG,CAACK,uBAAuB,CAACS,KAAD,CAAxB,CAAT;AACAH,IAAAA,KAAK,CAACG,KAAD,CAAL;AACD;AACF;;AAED,UAAUG,MAAV,CAAiBP,MAAjB,EAAgE;AAC9D,MAAI;AACF,UAAME,MAA+B,GAAG,MAAMb,IAAI,CAChDG,aAAa,CAACgB,mBADkC,EAEhDR,MAAM,CAACG,OAFyC,CAAlD;AAIA,UAAMb,GAAG,CAACO,uBAAuB,CAACK,MAAD,CAAxB,CAAT,CALE,CAMF;AACD,GAPD,CAOE,OAAOE,KAAP,EAAmB;AACnB,UAAMd,GAAG,CAACK,uBAAuB,CAACS,KAAD,CAAxB,CAAT;AACAH,IAAAA,KAAK,CAACG,KAAD,CAAL;AACD;AACF;;AACD,OAAO,UAAUK,eAAV,GAA2B;AAChCR,EAAAA,KAAK,CAAC,qBAAD,CAAL;AACA,QAAMV,UAAU,CAACG,iBAAiB,CAACgB,IAAnB,EAAyBX,cAAzB,CAAhB;AACD;AAED,OAAO,UAAUY,WAAV,GAAuB;AAC5B,QAAMpB,UAAU,CAACK,uBAAuB,CAACc,IAAzB,EAA+BL,OAA/B,CAAhB;AACD;AAED,OAAO,UAAUO,WAAV,GAAuB;AAC5B,QAAMrB,UAAU,CAACK,uBAAuB,CAACc,IAAzB,EAA+BH,MAA/B,CAAhB;AACD","sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { suggestionAPI } from \"features/suggestion\";\nimport { suggestionFailure, SuggestionListDataPayload, SuggestionPayload, suggestionRequest, \n  suggestionResultFailure, SuggestionResultPayload, suggestionResultRequest, suggestionResultSuccess, suggestionSuccess } from \"../reducer/suggestionSlice\";\n\n\n//리스트\nfunction* suggestionUser(action: PayloadAction<SuggestionPayload>) {\n  alert(\"suggestion saga action 감지\")\n  try {\n      const result: SuggestionListDataPayload = yield call(\n        suggestionAPI.suggestionAPI,\n        action.payload\n      );\n      yield put(suggestionSuccess(result));\n      alert(\"suggestion saga 실행\")\n      // window.localStorage.setItem('sessionSuggestion', JSON.stringify(result.data))\n\n  } catch (error: any) {\n      yield put(suggestionFailure(error))\n      alert(error)\n  }\n}\n\nfunction* accecpt(action: PayloadAction<SuggestionResultPayload>){\n  try {\n    const result: SuggestionResultPayload = yield call(\n      suggestionAPI.suggestionAcceptAPI,\n      action.payload\n    );\n    yield put(suggestionResultSuccess(result));\n    // window.location.href =''\n  } catch (error: any) {\n    yield put(suggestionResultFailure(error))\n    alert(error)\n  }\n}\n\nfunction* reject(action: PayloadAction<SuggestionResultPayload>){\n  try {\n    const result: SuggestionResultPayload = yield call(\n      suggestionAPI.suggestionRejectAPI,\n      action.payload\n    );\n    yield put(suggestionResultSuccess(result));\n    // window.location.href =''\n  } catch (error: any) {\n    yield put(suggestionResultFailure(error))\n    alert(error)\n  }\n}\nexport function* wacthSuggestion(){\n  alert('3. wacthSuggestion ')\n  yield takeLatest(suggestionRequest.type, suggestionUser);\n}\n\nexport function* wacthAccept(){\n  yield takeLatest(suggestionResultRequest.type, accecpt)\n}\n\nexport function* wacthReject(){\n  yield takeLatest(suggestionResultRequest.type, reject)\n}"]},"metadata":{},"sourceType":"module"}