{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { suggestionAPI } from \"features/suggestion\";\nimport { suggestionFailure, suggestionRequest, suggestionResultFailure, suggestionResultRequest, suggestionResultSuccess, suggestionSuccess } from \"../reducer/suggestionSlice\"; //리스트\n\nfunction* suggestion(action) {\n  try {\n    const result = yield call(suggestionAPI.suggestionAPI, action.payload);\n    yield put(suggestionSuccess(result));\n    window.localStorage.setItem('sessionSuggestion', JSON.stringify(result.data));\n  } catch (error) {\n    yield put(suggestionFailure(error));\n    alert(error);\n  }\n}\n\nfunction* accecpt(action) {\n  try {\n    const result = yield call(suggestionAPI.suggestionAcceptAPI, action.payload);\n    yield put(suggestionResultSuccess(result)); // window.location.href =''\n  } catch (error) {\n    yield put(suggestionResultFailure(error));\n    alert(error);\n  }\n}\n\nfunction* reject(action) {\n  try {\n    const result = yield call(suggestionAPI.suggestionRejectAPI, action.payload);\n    yield put(suggestionResultSuccess(result)); // window.location.href =''\n  } catch (error) {\n    yield put(suggestionResultFailure(error));\n    alert(error);\n  }\n}\n\nexport function* wacthSuggestion() {\n  yield takeLatest(suggestionRequest.type, suggestion);\n}\nexport function* wacthAccept() {\n  yield takeLatest(suggestionResultRequest.type, accecpt);\n}\nexport function* wacthReject() {\n  yield takeLatest(suggestionResultRequest.type, reject);\n}","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis-msa-frontend/src/features/suggestion/module/suggestionSaga.ts"],"names":["call","put","takeLatest","suggestionAPI","suggestionFailure","suggestionRequest","suggestionResultFailure","suggestionResultRequest","suggestionResultSuccess","suggestionSuccess","suggestion","action","result","payload","window","localStorage","setItem","JSON","stringify","data","error","alert","accecpt","suggestionAcceptAPI","reject","suggestionRejectAPI","wacthSuggestion","type","wacthAccept","wacthReject"],"mappings":"AACA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,iBAAT,EAA0EC,iBAA1E,EAA6FC,uBAA7F,EAA+IC,uBAA/I,EAAwKC,uBAAxK,EAAiMC,iBAAjM,QAA0N,4BAA1N,C,CAGA;;AACA,UAAUC,UAAV,CAAqBC,MAArB,EAA+D;AAC7D,MAAI;AACA,UAAMC,MAAiC,GAAG,MAAMZ,IAAI,CAClDG,aAAa,CAACA,aADoC,EAElDQ,MAAM,CAACE,OAF2C,CAApD;AAIA,UAAMZ,GAAG,CAACQ,iBAAiB,CAACG,MAAD,CAAlB,CAAT;AACAE,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,EAAiDC,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACO,IAAtB,CAAjD;AAEH,GARD,CAQE,OAAOC,KAAP,EAAmB;AACjB,UAAMnB,GAAG,CAACG,iBAAiB,CAACgB,KAAD,CAAlB,CAAT;AACAC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACH;AACF;;AAED,UAAUE,OAAV,CAAkBX,MAAlB,EAAiE;AAC/D,MAAI;AACF,UAAMC,MAA+B,GAAG,MAAMZ,IAAI,CAChDG,aAAa,CAACoB,mBADkC,EAEhDZ,MAAM,CAACE,OAFyC,CAAlD;AAIA,UAAMZ,GAAG,CAACO,uBAAuB,CAACI,MAAD,CAAxB,CAAT,CALE,CAMF;AACD,GAPD,CAOE,OAAOQ,KAAP,EAAmB;AACnB,UAAMnB,GAAG,CAACK,uBAAuB,CAACc,KAAD,CAAxB,CAAT;AACAC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF;;AAED,UAAUI,MAAV,CAAiBb,MAAjB,EAAgE;AAC9D,MAAI;AACF,UAAMC,MAA+B,GAAG,MAAMZ,IAAI,CAChDG,aAAa,CAACsB,mBADkC,EAEhDd,MAAM,CAACE,OAFyC,CAAlD;AAIA,UAAMZ,GAAG,CAACO,uBAAuB,CAACI,MAAD,CAAxB,CAAT,CALE,CAMF;AACD,GAPD,CAOE,OAAOQ,KAAP,EAAmB;AACnB,UAAMnB,GAAG,CAACK,uBAAuB,CAACc,KAAD,CAAxB,CAAT;AACAC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF;;AACD,OAAO,UAAUM,eAAV,GAA2B;AAChC,QAAMxB,UAAU,CAACG,iBAAiB,CAACsB,IAAnB,EAAyBjB,UAAzB,CAAhB;AACD;AAED,OAAO,UAAUkB,WAAV,GAAuB;AAC5B,QAAM1B,UAAU,CAACK,uBAAuB,CAACoB,IAAzB,EAA+BL,OAA/B,CAAhB;AACD;AAED,OAAO,UAAUO,WAAV,GAAuB;AAC5B,QAAM3B,UAAU,CAACK,uBAAuB,CAACoB,IAAzB,EAA+BH,MAA/B,CAAhB;AACD","sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { suggestionAPI } from \"features/suggestion\";\nimport { suggestionFailure, SuggestionListDataPayload, SuggestionPayload, suggestionRequest, suggestionResultFailure, SuggestionResultPayload, suggestionResultRequest, suggestionResultSuccess, suggestionSuccess } from \"../reducer/suggestionSlice\";\n\n\n//리스트\nfunction* suggestion(action: PayloadAction<SuggestionPayload>) {\n  try {\n      const result: SuggestionListDataPayload = yield call(\n        suggestionAPI.suggestionAPI,\n        action.payload\n      );\n      yield put(suggestionSuccess(result));\n      window.localStorage.setItem('sessionSuggestion', JSON.stringify(result.data))\n\n  } catch (error: any) {\n      yield put(suggestionFailure(error))\n      alert(error)\n  }\n}\n\nfunction* accecpt(action: PayloadAction<SuggestionResultPayload>){\n  try {\n    const result: SuggestionResultPayload = yield call(\n      suggestionAPI.suggestionAcceptAPI,\n      action.payload\n    );\n    yield put(suggestionResultSuccess(result));\n    // window.location.href =''\n  } catch (error: any) {\n    yield put(suggestionResultFailure(error))\n    alert(error)\n  }\n}\n\nfunction* reject(action: PayloadAction<SuggestionResultPayload>){\n  try {\n    const result: SuggestionResultPayload = yield call(\n      suggestionAPI.suggestionRejectAPI,\n      action.payload\n    );\n    yield put(suggestionResultSuccess(result));\n    // window.location.href =''\n  } catch (error: any) {\n    yield put(suggestionResultFailure(error))\n    alert(error)\n  }\n}\nexport function* wacthSuggestion(){\n  yield takeLatest(suggestionRequest.type, suggestion);\n}\n\nexport function* wacthAccept(){\n  yield takeLatest(suggestionResultRequest.type, accecpt)\n}\n\nexport function* wacthReject(){\n  yield takeLatest(suggestionResultRequest.type, reject)\n}"]},"metadata":{},"sourceType":"module"}