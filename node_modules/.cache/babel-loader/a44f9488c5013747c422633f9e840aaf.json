{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { suggestionAPI } from \"features/suggestion\";\nimport { suggestionFailure, suggestionRequest, suggestionResultFailure, suggestionResultRequest, suggestionResultSuccess, suggestionSuccess } from \"../reducer/suggestionSlice\"; //리스트\n\nfunction* suggestionUser(action) {\n  // alert(\"suggestion saga action 감지\")\n  try {\n    const result = yield call(suggestionAPI.suggestionAPI, action.payload); // alert(`saga action 실행 후 alert ::: ${JSON.stringify(action.payload)}`)\n\n    yield put(suggestionSuccess(result)); // alert(\"suggestion saga 실행\")\n    // window.localStorage.setItem('sessionSuggestion', JSON.stringify(result.data)) \n  } catch (error) {\n    yield put(suggestionFailure(error));\n    alert(error);\n  }\n}\n\nfunction* accecpt(action) {\n  try {\n    const result = yield call(suggestionAPI.suggestionAcceptAPI, action.payload);\n    console.log(`사가 accept payload ::: ${JSON.stringify(result)} `);\n    yield put(suggestionResultSuccess(result)); // window.location.href =''\n  } catch (error) {\n    yield put(suggestionResultFailure(error));\n    alert(error);\n  }\n} // function* reject(action: PayloadAction<SuggestionResultPayload>){\n//   try {\n//     const result: SuggestionResultPayload = yield call(\n//       suggestionAPI.suggestionRejectAPI,\n//       action.payload\n//     );\n//     yield put(suggestionResultSuccess(result));\n//     // window.location.href =''\n//   } catch (error: any) {\n//     yield put(suggestionResultFailure(error))\n//     alert(error)\n//   }\n// }\n\n\nexport function* wacthSuggestion() {\n  yield takeLatest(suggestionRequest.type, suggestionUser);\n}\nexport function* wacthAccept() {\n  yield takeLatest(suggestionResultRequest.type, accecpt);\n} // export function* wacthReject(){\n//   yield takeLatest(suggestionResultRequest.type, reject)\n// }","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis-msa-frontend/src/features/suggestion/module/suggestionSaga.ts"],"names":["call","put","takeLatest","suggestionAPI","suggestionFailure","suggestionRequest","suggestionResultFailure","suggestionResultRequest","suggestionResultSuccess","suggestionSuccess","suggestionUser","action","result","payload","error","alert","accecpt","suggestionAcceptAPI","console","log","JSON","stringify","wacthSuggestion","type","wacthAccept"],"mappings":"AACA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,iBAAT,EAA0EC,iBAA1E,EACEC,uBADF,EACoDC,uBADpD,EAC6EC,uBAD7E,EACsGC,iBADtG,QAC+H,4BAD/H,C,CAIA;;AACA,UAAUC,cAAV,CAAyBC,MAAzB,EAAmE;AACjE;AACA,MAAI;AACA,UAAMC,MAAiC,GAAG,MAAMZ,IAAI,CAClDG,aAAa,CAACA,aADoC,EAElDQ,MAAM,CAACE,OAF2C,CAApD,CADA,CAKA;;AACA,UAAMZ,GAAG,CAACQ,iBAAiB,CAACG,MAAD,CAAlB,CAAT,CANA,CAOA;AACA;AAEH,GAVD,CAUE,OAAOE,KAAP,EAAmB;AACjB,UAAMb,GAAG,CAACG,iBAAiB,CAACU,KAAD,CAAlB,CAAT;AACAC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACH;AACF;;AAED,UAAUE,OAAV,CAAkBL,MAAlB,EAAiE;AAC/D,MAAI;AACF,UAAMC,MAA+B,GAAG,MAAMZ,IAAI,CAChDG,aAAa,CAACc,mBADkC,EAEhDN,MAAM,CAACE,OAFyC,CAAlD;AAIAK,IAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBC,IAAI,CAACC,SAAL,CAAeT,MAAf,CAAuB,GAA5D;AACA,UAAMX,GAAG,CAACO,uBAAuB,CAACI,MAAD,CAAxB,CAAT,CANE,CAOF;AACD,GARD,CAQE,OAAOE,KAAP,EAAmB;AACnB,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAD,CAAxB,CAAT;AACAC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,UAAUQ,eAAV,GAA2B;AAChC,QAAMpB,UAAU,CAACG,iBAAiB,CAACkB,IAAnB,EAAyBb,cAAzB,CAAhB;AACD;AAED,OAAO,UAAUc,WAAV,GAAuB;AAC5B,QAAMtB,UAAU,CAACK,uBAAuB,CAACgB,IAAzB,EAA+BP,OAA/B,CAAhB;AACD,C,CAED;AACA;AACA","sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { suggestionAPI } from \"features/suggestion\";\nimport { suggestionFailure, SuggestionListDataPayload, SuggestionPayload, suggestionRequest, \n  suggestionResultFailure, SuggestionResultPayload, suggestionResultRequest, suggestionResultSuccess, suggestionSuccess } from \"../reducer/suggestionSlice\";\n\n\n//리스트\nfunction* suggestionUser(action: PayloadAction<SuggestionPayload>) {\n  // alert(\"suggestion saga action 감지\")\n  try {\n      const result: SuggestionListDataPayload = yield call(\n        suggestionAPI.suggestionAPI,\n        action.payload\n      );\n      // alert(`saga action 실행 후 alert ::: ${JSON.stringify(action.payload)}`)\n      yield put(suggestionSuccess(result));\n      // alert(\"suggestion saga 실행\")\n      // window.localStorage.setItem('sessionSuggestion', JSON.stringify(result.data)) \n\n  } catch (error: any) {\n      yield put(suggestionFailure(error))\n      alert(error)\n  }\n}\n\nfunction* accecpt(action: PayloadAction<SuggestionResultPayload>){\n  try {\n    const result: SuggestionResultPayload = yield call(\n      suggestionAPI.suggestionAcceptAPI,\n      action.payload\n    );\n    console.log(`사가 accept payload ::: ${JSON.stringify(result)} `)\n    yield put(suggestionResultSuccess(result));\n    // window.location.href =''\n  } catch (error: any) {\n    yield put(suggestionResultFailure(error))\n    alert(error)\n  }\n}\n\n// function* reject(action: PayloadAction<SuggestionResultPayload>){\n//   try {\n//     const result: SuggestionResultPayload = yield call(\n//       suggestionAPI.suggestionRejectAPI,\n//       action.payload\n//     );\n//     yield put(suggestionResultSuccess(result));\n//     // window.location.href =''\n//   } catch (error: any) {\n//     yield put(suggestionResultFailure(error))\n//     alert(error)\n//   }\n// }\n\nexport function* wacthSuggestion(){\n  yield takeLatest(suggestionRequest.type, suggestionUser);\n}\n\nexport function* wacthAccept(){\n  yield takeLatest(suggestionResultRequest.type, accecpt)\n}\n\n// export function* wacthReject(){\n//   yield takeLatest(suggestionResultRequest.type, reject)\n// }"]},"metadata":{},"sourceType":"module"}