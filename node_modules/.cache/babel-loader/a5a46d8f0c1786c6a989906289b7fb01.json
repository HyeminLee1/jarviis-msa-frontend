{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\"; //받아오는 데이터//\n\nconst initialState = {\n  suggestionLoading: false,\n  suggestionData: null,\n  error: null\n};\nconst suggestionSlice = createSlice({\n  name: \"suggestions\",\n  initialState,\n  reducers: {\n    //suggestion\n    suggestionRequest(state, _action) {\n      alert(\"2. 슬라이스\");\n      state.suggestionLoading = true;\n      state.error = null;\n    },\n\n    suggestionSuccess(state, action) {\n      state.suggestionLoading = false;\n      state.suggestionData = action.payload;\n    },\n\n    suggestionFailure(state, action) {\n      state.suggestionLoading = false;\n      state.error = action.payload;\n    },\n\n    //suggestionResult\n    suggestionResultRequest(state, _action) {\n      state.suggestionLoading = true;\n      state.error = null;\n    },\n\n    suggestionResultSuccess(state, action) {\n      state.suggestionLoading = false;\n      state.suggestionData = action.payload;\n    },\n\n    suggestionResultFailure(state, action) {\n      state.suggestionLoading = false;\n      state.error = action.payload;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    suggestion: suggestionSlice.reducer\n  }\n});\nconst {\n  reducer,\n  actions\n} = suggestionSlice;\nexport const {\n  suggestionRequest,\n  suggestionSuccess,\n  suggestionFailure,\n  suggestionResultRequest,\n  suggestionResultSuccess,\n  suggestionResultFailure\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis-msa-frontend/src/features/suggestion/reducer/suggestionSlice.ts"],"names":["configureStore","createSlice","initialState","suggestionLoading","suggestionData","error","suggestionSlice","name","reducers","suggestionRequest","state","_action","alert","suggestionSuccess","action","payload","suggestionFailure","suggestionResultRequest","suggestionResultSuccess","suggestionResultFailure","store","reducer","suggestion","actions"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA2D,kBAA3D,C,CAEA;;AAgDA,MAAMC,YAA6B,GAAG;AACpCC,EAAAA,iBAAiB,EAAG,KADgB;AAEpCC,EAAAA,cAAc,EAAE,IAFoB;AAGpCC,EAAAA,KAAK,EAAE;AAH6B,CAAtC;AAMA,MAAMC,eAAe,GAAGL,WAAW,CAAC;AAClCM,EAAAA,IAAI,EAAE,aAD4B;AAElCL,EAAAA,YAFkC;AAGlCM,EAAAA,QAAQ,EAAE;AAER;AACAC,IAAAA,iBAAiB,CAACC,KAAD,EAAyBC,OAAzB,EAAoE;AACnFC,MAAAA,KAAK,CAAC,SAAD,CAAL;AACAF,MAAAA,KAAK,CAACP,iBAAN,GAA0B,IAA1B;AACAO,MAAAA,KAAK,CAACL,KAAN,GAAc,IAAd;AACD,KAPO;;AASRQ,IAAAA,iBAAiB,CAACH,KAAD,EAAyBI,MAAzB,EAA2E;AAC1FJ,MAAAA,KAAK,CAACP,iBAAN,GAA0B,KAA1B;AACAO,MAAAA,KAAK,CAACN,cAAN,GAAuBU,MAAM,CAACC,OAA9B;AACD,KAZO;;AAcRC,IAAAA,iBAAiB,CAACN,KAAD,EAAyBI,MAAzB,EAAgE;AAC/EJ,MAAAA,KAAK,CAACP,iBAAN,GAA0B,KAA1B;AACAO,MAAAA,KAAK,CAACL,KAAN,GAAcS,MAAM,CAACC,OAArB;AACD,KAjBO;;AAmBR;AACAE,IAAAA,uBAAuB,CAACP,KAAD,EAAyBC,OAAzB,EAA0E;AAC/FD,MAAAA,KAAK,CAACP,iBAAN,GAA0B,IAA1B;AACAO,MAAAA,KAAK,CAACL,KAAN,GAAc,IAAd;AACD,KAvBO;;AAyBRa,IAAAA,uBAAuB,CAACR,KAAD,EAAyBI,MAAzB,EAAyE;AAC9FJ,MAAAA,KAAK,CAACP,iBAAN,GAA0B,KAA1B;AACAO,MAAAA,KAAK,CAACN,cAAN,GAAuBU,MAAM,CAACC,OAA9B;AACD,KA5BO;;AA8BRI,IAAAA,uBAAuB,CAACT,KAAD,EAAyBI,MAAzB,EAAgE;AACrFJ,MAAAA,KAAK,CAACP,iBAAN,GAA0B,KAA1B;AACAO,MAAAA,KAAK,CAACL,KAAN,GAAcS,MAAM,CAACC,OAArB;AACD;;AAjCO;AAHwB,CAAD,CAAnC;AAwCA,MAAMK,KAAK,GAAGpB,cAAc,CAAC;AAC3BqB,EAAAA,OAAO,EAAE;AACLC,IAAAA,UAAU,EAAEhB,eAAe,CAACe;AADvB;AADkB,CAAD,CAA5B;AAOA,MAAM;AAAEA,EAAAA,OAAF;AAAWE,EAAAA;AAAX,IAAuBjB,eAA7B;AAEA,OAAO,MAAM;AACXG,EAAAA,iBADW;AAEXI,EAAAA,iBAFW;AAGXG,EAAAA,iBAHW;AAIXC,EAAAA,uBAJW;AAKXC,EAAAA,uBALW;AAMXC,EAAAA;AANW,IAOTI,OAPG;AASP,eAAeF,OAAf","sourcesContent":["import { configureStore, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n//받아오는 데이터//\nexport interface SuggestionListDataPayload {\n  data : [{\n    suggestion_id: number\n    user_id: number\n    contents: string,\n    location: string,\n    routine: string,\n    start: string,\n    end: string,\n    classification: string,\n    type: string\n  }]\n}\n\n\n\n//요청하는 데이터\nexport interface SuggestionPayload {\n  user_id: number;\n}\n\nexport interface SuggestionResultPayload {\n  data : {\n    suggestion_id: number\n    user_id: number\n    contents: string,\n    location: string,\n    routine: string,\n    start: string,\n    end: string,\n    classification: string,\n    type: string\n  }\n}\n\n\n//미들웨어\nexport interface SuggsetionState {\n  suggestionLoading: boolean;\n  suggestionData: any;\n  error: any;\n}\n\n// api의 param 타입\nexport interface ParamType {\n  id: number;\n}\nconst initialState: SuggsetionState = {\n  suggestionLoading : false,\n  suggestionData: null,\n  error: null,\n};\n\nconst suggestionSlice = createSlice({\n  name: \"suggestions\",\n  initialState,\n  reducers: {\n\n    //suggestion\n    suggestionRequest(state: SuggsetionState, _action: PayloadAction<SuggestionPayload>) {\n      alert(\"2. 슬라이스\")\n      state.suggestionLoading = true;\n      state.error = null;\n    },\n\n    suggestionSuccess(state: SuggsetionState, action: PayloadAction<SuggestionListDataPayload>) {\n      state.suggestionLoading = false;\n      state.suggestionData = action.payload;\n    },\n\n    suggestionFailure(state: SuggsetionState, action: PayloadAction<{ error: any }>) {\n      state.suggestionLoading = false;\n      state.error = action.payload;\n    },\n\n    //suggestionResult\n    suggestionResultRequest(state: SuggsetionState, _action: PayloadAction<SuggestionResultPayload>) {\n      state.suggestionLoading = true;\n      state.error = null;\n    },\n\n    suggestionResultSuccess(state: SuggsetionState, action: PayloadAction<SuggestionResultPayload>) {\n      state.suggestionLoading = false;\n      state.suggestionData = action.payload;\n    },\n\n    suggestionResultFailure(state: SuggsetionState, action: PayloadAction<{ error: any }>) {\n      state.suggestionLoading = false;\n      state.error = action.payload;\n    },\n  }\n})\n\nconst store = configureStore({\n  reducer: {\n      suggestion: suggestionSlice.reducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nconst { reducer, actions } = suggestionSlice;\n\nexport const {\n  suggestionRequest,\n  suggestionSuccess,\n  suggestionFailure,\n  suggestionResultRequest,\n  suggestionResultSuccess,\n  suggestionResultFailure\n} = actions;\n\nexport default reducer;\n    \n\n"]},"metadata":{},"sourceType":"module"}