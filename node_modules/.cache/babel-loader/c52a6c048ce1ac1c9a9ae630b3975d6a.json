{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emma0\\\\workspace\\\\jarviis-msa-frontend\\\\src\\\\features\\\\todo\\\\components\\\\AddTask.js\";\nimport React, { useState } from \"react\";\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport dayjs from \"dayjs\";\nimport { addTaskRequest, taskRequest } from \"../reducer/taskSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskAdd() {\n  const dateFormat = date => dayjs(date).format(\"YYYY-MM-DD hh:mm\");\n\n  const today = new Date();\n  const [date, setDate] = useState(dateFormat(today));\n  const defaultValues = {\n    user_id: 1,\n    //로그인 되면 id 넣기\n    title: '',\n    classification: '',\n    start: date,\n    end: '',\n    location: '',\n    completion: '',\n    description: ''\n  };\n  const dispatch = useDispatch();\n  const {\n    handleSubmit,\n    reset,\n    getValues\n  } = useForm({\n    mode: 'onChange',\n    defaultValues\n  });\n\n  function onSubmit() {\n    reset(defaultValues);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"new-todo-input\",\n        className: \"input input__lg\",\n        name: \"text\",\n        autoComplete: \"off\",\n        placeholder: \"What needs to be done?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: \"20px\"\n        },\n        type: \"submit\",\n        className: \"btn btn__primary btn__lg\",\n        onSubmit: handleSubmit(async data => {\n          await dispatch(addTaskRequest({ ...data\n          }));\n        }),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis-msa-frontend/src/features/todo/components/AddTask.js"],"names":["React","useState","TextField","AdapterDateFns","LocalizationProvider","DateTimePicker","Box","InputLabel","MenuItem","FormControl","Select","Button","Controller","useForm","useDispatch","dayjs","addTaskRequest","taskRequest","TaskAdd","dateFormat","date","format","today","Date","setDate","defaultValues","user_id","title","classification","start","end","location","completion","description","dispatch","handleSubmit","reset","getValues","mode","onSubmit","marginLeft","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,iBAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,sBAA5C;;;AAKA,eAAe,SAASC,OAAT,GAAmB;AAC9B,QAAMC,UAAU,GAAIC,IAAD,IAAUL,KAAK,CAACK,IAAD,CAAL,CAAYC,MAAZ,CAAmB,kBAAnB,CAA7B;;AACA,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBvB,QAAQ,CAACkB,UAAU,CAACG,KAAD,CAAX,CAAhC;AAEA,QAAMG,aAAa,GAAG;AAClBC,IAAAA,OAAO,EAAE,CADS;AACN;AACZC,IAAAA,KAAK,EAAE,EAFW;AAGlBC,IAAAA,cAAc,EAAE,EAHE;AAIlBC,IAAAA,KAAK,EAAET,IAJW;AAKlBU,IAAAA,GAAG,EAAE,EALa;AAMlBC,IAAAA,QAAQ,EAAE,EANQ;AAOlBC,IAAAA,UAAU,EAAE,EAPM;AAQlBC,IAAAA,WAAW,EAAE;AARK,GAAtB;AAUA,QAAMC,QAAQ,GAAGpB,WAAW,EAA5B;AAEA,QAAM;AAAEqB,IAAAA,YAAF;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAqCxB,OAAO,CAAC;AAC/CyB,IAAAA,IAAI,EAAE,UADyC;AAE/Cb,IAAAA;AAF+C,GAAD,CAAlD;;AAIA,WAASc,QAAT,GAAoB;AAChBH,IAAAA,KAAK,CAACX,aAAD,CAAL;AACH;;AAID,sBAAQ;AAAA,2BACJ;AAAA,8BAMI;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,EAAE,EAAC,gBAFH;AAGA,QAAA,SAAS,EAAC,iBAHV;AAIA,QAAA,IAAI,EAAC,MAJL;AAKA,QAAA,YAAY,EAAC,KALb;AAMA,QAAA,WAAW,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA,cANJ,eAcI;AAAQ,QAAA,KAAK,EAAE;AAACe,UAAAA,UAAU,EAAC;AAAZ,SAAf;AAAoC,QAAA,IAAI,EAAC,QAAzC;AAAkD,QAAA,SAAS,EAAC,0BAA5D;AACI,QAAA,QAAQ,EAAGL,YAAY,CAAC,MAAOM,IAAP,IAAgB;AAAE,gBAAMP,QAAQ,CAAClB,cAAc,CAAC,EACxE,GAAGyB;AADqE,WAAD,CAAf,CAAd;AAEtC,SAFmB,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADI,mBAAR;AAwBH","sourcesContent":["import React, { useState } from \"react\";\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux'\r\nimport dayjs from \"dayjs\";\r\nimport { addTaskRequest, taskRequest } from \"../reducer/taskSlice\";\r\n\r\n\r\n\r\n\r\nexport default function TaskAdd() {\r\n    const dateFormat = (date) => dayjs(date).format(\"YYYY-MM-DD hh:mm\");\r\n    const today = new Date()\r\n    const [date, setDate] = useState(dateFormat(today))\r\n\r\n    const defaultValues = {\r\n        user_id: 1, //로그인 되면 id 넣기\r\n        title: '',\r\n        classification: '',\r\n        start: date,\r\n        end: '',\r\n        location: '', \r\n        completion: '', \r\n        description: '', \r\n    };\r\n    const dispatch = useDispatch()\r\n\r\n    const { handleSubmit, reset, getValues } = useForm({\r\n        mode: 'onChange',\r\n        defaultValues,\r\n    });\r\n    function onSubmit() {\r\n        reset(defaultValues);\r\n    }\r\n    \r\n\r\n\r\n    return (<>\r\n        <form>\r\n            {/* <h2 className=\"label-wrapper\">\r\n            <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n            What needs to be done?\r\n            </label>\r\n            </h2> */}\r\n            <input\r\n            type=\"text\"\r\n            id=\"new-todo-input\"\r\n            className=\"input input__lg\"\r\n            name=\"text\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"What needs to be done?\"\r\n            />\r\n            <button style={{marginLeft:\"20px\"}} type=\"submit\" className=\"btn btn__primary btn__lg\"\r\n                onSubmit= {handleSubmit(async (data) => { await dispatch(addTaskRequest({\r\n                ...data,\r\n               })) })}\r\n            >\r\n                Add\r\n            </button>\r\n        </form>   \r\n    </>)\r\n}"]},"metadata":{},"sourceType":"module"}